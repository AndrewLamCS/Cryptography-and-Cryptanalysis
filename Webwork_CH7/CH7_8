#CH7_8 Fermat's Liar

from math import sqrt

# A function to print all prime factors of a given number n
def primeFactors(n):
    ps = []
    
    # Print the number of two's that divide n
    while n % 2 == 0:
        p = 2
        ps.append(p)
        n = n // p  # Use integer division
    
    # n must be odd at this point
    # so a skip of 2 (i = i + 2) can be used, only odd numbers
    sqrt_n = int(sqrt(n)) + 1
    for p in range(3, sqrt_n, 2):
        while n % p == 0:  # While p divides n, record p in list
            ps.append(p)
            n = n // p  # Use integer division
        
    # Condition if n is a prime number greater than sqrt_n
    if n > sqrt_n - 1:
        p = n
        ps.append(p)
    return ps

def FermatsLiar(n):
    for i in range(n + 1, 2 * n + 1):  # Iterate over the range (n+1, 2*n)
        if (2 ** (i - 1)) % i == 1 and len(primeFactors(i)) > 1:
            return i

def main():
    n = 3550
    ps1 = primeFactors(n)
    print("Prime Factorization of n = %d is:" % n, ps1)
    liar = FermatsLiar(n)
    print("Fermat's Liar: ", liar)
main()